generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AdminUser {
  id        String   @id @default(uuid())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Setting {
  id        String   @id @default(uuid())
  key       String   @unique
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ServiceCategory {
  id        String    @id @default(uuid())
  name      String    @unique
  slug      String    @unique
  description String?
  imageUrl  String?
  services  Service[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Service {
  id                String           @id @default(uuid())
  name              String           @unique
  slug              String           @unique
  shortDescription  String?
  description       String?
  price             Decimal?         @db.Decimal(10, 2)
  imageUrl          String?
  isFeatured        Boolean          @default(false)
  serviceCategoryId String
  category          ServiceCategory  @relation(fields: [serviceCategoryId], references: [id])
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
}

model Product {
  id               String          @id @default(uuid())
  name             String          @unique
  slug             String          @unique
  shortDescription String?
  description      String?
  price            Decimal         @db.Decimal(10, 2)
  imageUrl         String?
  isFeatured       Boolean         @default(false)
  categoryId       String
  category         ProductCategory @relation(fields: [categoryId], references: [id])
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  OrderItems       OrderItem[]
}

model ProductCategory {
  id        String    @id @default(uuid())
  name      String    @unique
  slug      String    @unique
  description String?
  imageUrl  String?
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Order {
  id        String     @id @default(uuid())
  totalAmount Decimal    @db.Decimal(10, 2)
  status    String     @default("pending") // pending, completed, cancelled
  paymentId String?    @unique // iZico payment ID
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  items     OrderItem[]
}

model OrderItem {
  id        String   @id @default(uuid())
  orderId   String
  productId String
  quantity  Int
  price     Decimal  @db.Decimal(10, 2)
  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PageContent {
  id        String   @id @default(uuid())
  pageName  String   @unique // e.g., "about-us", "contact", "blog"
  content   String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
